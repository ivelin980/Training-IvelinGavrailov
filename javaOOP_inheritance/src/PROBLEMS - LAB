Problem 1. Single inheritance (jv.oop.inheritance.lab.single.inheritance)
Create two classes named Animal and Dog.
Animal with a single public method eat() that prints: "eating…"
Dog with a single public method bark() that prints: "barking…"
Dog should inherit from Animal.

Problem 2. Multiple Inheritance (jv.oop.inheritance.lab.multiple.inheritance)
Create three classes named Animal, Dog and Puppy. 
Animal with a single public method eat() that prints: "eating…"
Dog with a single public method bark() that prints: "barking…"
Puppy with a single public method weep() that prints: "weeping…"
Dog should inherit from Animal. Puppy should inherit from Dog. 

Problem 3. Hierarchical Inheritance (jv.oop.inheritance.lab.hierarchical.inheritance)
Create three classes named Animal, Dog and Cat. 
Animal with a single public method eat() that prints: "eating…"
Dog with a single public method bark() that prints: "barking…"
Cat with a single public method meow() that prints: "meowing…"
Dog and Cat should inherit from Animal.

Problem 4. Random Array List (jv.oop.inheritance.lab.random.arraylist) (
Create a RandomArrayList class that has all the functionality of an ArrayList.
Add additional function that returns and removes a random element from the list.
•	Public method: getRandomElement(): Object

Problem 5. Stack of Strings (jv.oop.inheritance.lab.stack.of.strings)
Create a class Stack which can store only strings and has the following functionality:
•	Private field: data: ArrayList<String>
•	Public method: push(String item): void
•	Public method: pop(): String
•	Public method: peek(): String
•	Public method: isEmpty(): boolean
